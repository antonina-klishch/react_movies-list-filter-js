{"version":3,"sources":["components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.jsx","components/Header/Header.jsx","App.jsx","index.jsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","Header","query","filterBy","htmlFor","type","id","placeholder","value","onChange","e","target","normalizeText","text","toLowerCase","trim","App","useState","setQuery","visibleMovies","listMovies","filterMovies","filter","move","includes","getFilterMovies","moviesFromServer","newQuery","ReactDOM","render","document","getElementById"],"mappings":"4SAEaA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBAAKC,IAAKF,EAAMG,OAAQC,IAAI,kBAIhC,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBAAKC,IAAI,wBAAwBE,IAAI,aAIzC,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAf,0BAxBiB,ECCZC,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAA8BA,MAAOA,GAArBA,EAAMY,OADP,KAFK,ECFbC,EAAS,SAAC,GAAD,IACpBC,EADoB,EACpBA,MACAC,EAFoB,EAEpBA,SAFoB,OAIpB,qBAAKd,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UACE,uBAAOe,QAAQ,eAAef,UAAU,QAAxC,0BAIA,qBAAKA,UAAU,UAAf,SACE,uBACEgB,KAAK,OACLC,GAAG,eACHjB,UAAU,QACVkB,YAAY,mBACZC,MAAON,EACPO,SAAU,SAACC,GACTP,EAASO,EAAEC,OAAOH,MACnB,UAnBW,ECoBtB,SAASI,EAAcC,GACrB,OAAOA,EAAKC,cAAcC,MAC3B,CAEM,IAAMC,EAAM,WACjB,MAA0BC,mBAAS,IAAnC,mBAAOf,EAAP,KAAcgB,EAAd,KACMC,EApBR,SAAyBC,EAAYlB,GACnC,IAAImB,EAAY,YAAOD,GAUvB,OARIlB,IACFmB,EAAeA,EAAaC,QAE1B,SAAAC,GAAI,OAAIX,EAAcW,EAAK9B,OAAO+B,SAASZ,EAAcV,KACtDU,EAAcW,EAAK7B,aAAa8B,SAASZ,EAAcV,GADtD,KAKDmB,CACR,CAQuBI,CAAgBC,EAAkBxB,GAExD,OACE,sBAAKb,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UAEE,cAAC,EAAD,CACEa,MAAOA,EACPC,SAAU,SAACwB,GACTT,EAASS,EACV,IAEH,cAAC,EAAD,CAAY7B,OAAQqB,OAGtB,qBAAK9B,UAAU,UAAf,iCAKL,EC3CDuC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q","file":"static/js/main.de0b7c26.chunk.js","sourcesContent":["import './MovieCard.scss';\n\nexport const MovieCard = ({ movie }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img src={movie.imgUrl} alt=\"Film logo\" />\n      </figure>\n    </div>\n\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img src=\"images/imdb-logo.jpeg\" alt=\"imdb\" />\n          </figure>\n        </div>\n\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} movie={movie} />\n    ))}\n  </div>\n);\n","\nexport const Header = ({\n  query,\n  filterBy,\n}) => (\n  <div className=\"box\">\n    <div className=\"field\">\n      <label htmlFor=\"search-query\" className=\"label\">\n        Search movie\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id=\"search-query\"\n          className=\"input\"\n          placeholder=\"Type search word\"\n          value={query}\n          onChange={(e) => {\n            filterBy(e.target.value);\n          }}\n        />\n      </div>\n    </div>\n  </div>\n);\n","import { useState } from 'react';\n\nimport './App.scss';\nimport moviesFromServer from './api/movies.json';\nimport { MoviesList } from './components/MoviesList';\nimport { Header } from './components/Header';\n\nfunction getFilterMovies(listMovies, query) {\n  let filterMovies = [...listMovies];\n\n  if (query) {\n    filterMovies = filterMovies.filter(\n\n      move => normalizeText(move.title).includes(normalizeText(query))\n      || normalizeText(move.description).includes(normalizeText(query)),\n    );\n  }\n\n  return filterMovies;\n}\n\nfunction normalizeText(text) {\n  return text.toLowerCase().trim();\n}\n\nexport const App = () => {\n  const [query, setQuery] = useState('');\n  const visibleMovies = getFilterMovies(moviesFromServer, query);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n\n        <Header\n          query={query}\n          filterBy={(newQuery) => {\n            setQuery(newQuery);\n          }}\n        />\n        <MoviesList movies={visibleMovies} />\n      </div>\n\n      <div className=\"sidebar\">\n        Sidebar goes here\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}